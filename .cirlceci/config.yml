# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:

      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library  of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      - run: echo reached here

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python app_test.py test

      - run: echo reached here as well

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run: echo oops

      - run: bash .circleci/setup-heroku.sh

      - add_ssh_keys:
          fingerprints:
            - "eY+hMnxxQyD9EvJNPIuv0vYXsekfhltHNuQ6U+qu2qA anmol@dhcp-nyc-1478.redrover.cornell.edu"
      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master
              heroku run python app_test.py deploy
              heroku restart
            else
              echo something is wrong
            fi
